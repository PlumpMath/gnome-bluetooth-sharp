// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Bluetooth {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct GbtPlugin : IEquatable<GbtPlugin> {

		private IntPtr _module;
		private IntPtr _info;

		public Bluetooth.GbtPluginInfo info {
			get { return Bluetooth.GbtPluginInfo.New (_info); }
		}

		public static Bluetooth.GbtPlugin Zero = new Bluetooth.GbtPlugin ();

		public static Bluetooth.GbtPlugin New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Bluetooth.GbtPlugin.Zero;
			return (Bluetooth.GbtPlugin) Marshal.PtrToStructure (raw, typeof (Bluetooth.GbtPlugin));
		}

		public bool Equals (GbtPlugin other)
		{
			return true && _module.Equals (other._module) && info.Equals (other.info);
		}

		public override bool Equals (object other)
		{
			return other is GbtPlugin && Equals ((GbtPlugin) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ _module.GetHashCode () ^ info.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
