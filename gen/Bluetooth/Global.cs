// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Bluetooth {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class Global {

		[DllImport("libgnome-bluetooth.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int bluetooth_class_to_type(uint cls);

		public static Bluetooth.Type ClassToType(uint cls) {
			int raw_ret = bluetooth_class_to_type(cls);
			Bluetooth.Type ret = (Bluetooth.Type) raw_ret;
			return ret;
		}

		[DllImport("libgnome-bluetooth.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void bluetooth_send_to_address(IntPtr address, IntPtr alias);

		public static void SendToAddress(string address, string alias) {
			IntPtr native_address = GLib.Marshaller.StringToPtrGStrdup (address);
			IntPtr native_alias = GLib.Marshaller.StringToPtrGStrdup (alias);
			bluetooth_send_to_address(native_address, native_alias);
			GLib.Marshaller.Free (native_address);
			GLib.Marshaller.Free (native_alias);
		}

		[DllImport("libgnome-bluetooth.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr bluetooth_type_to_string(uint type);

		public static string TypeToString(uint type) {
			IntPtr raw_ret = bluetooth_type_to_string(type);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			return ret;
		}

		[DllImport("libgnome-bluetooth.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr bluetooth_uuid_to_string(IntPtr uuid);

		public static string UuidToString(string uuid) {
			IntPtr native_uuid = GLib.Marshaller.StringToPtrGStrdup (uuid);
			IntPtr raw_ret = bluetooth_uuid_to_string(native_uuid);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			GLib.Marshaller.Free (native_uuid);
			return ret;
		}

		[DllImport("libgnome-bluetooth.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool bluetooth_verify_address(IntPtr bdaddr);

		public static bool VerifyAddress(string bdaddr) {
			IntPtr native_bdaddr = GLib.Marshaller.StringToPtrGStrdup (bdaddr);
			bool raw_ret = bluetooth_verify_address(native_bdaddr);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_bdaddr);
			return ret;
		}

#endregion
	}
}
